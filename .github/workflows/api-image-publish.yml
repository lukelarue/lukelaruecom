name: API Image Publish
on:
  push:
    branches:
      - main
    paths:
      - 'services/login-api/**'
      - 'services/chat-api/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/api-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  GCP_DEPLOY_SA_EMAIL: ${{ vars.GCP_DEPLOY_SA_EMAIL }}
  ARTIFACT_REGISTRY_HOST: ${{ vars.GCP_ARTIFACT_REGISTRY_HOST }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: login-api
            directory: services/login-api
            repository: login-api
            image: login-api
          - service: chat-api
            directory: services/chat-api
            repository: chat-api
            image: chat-api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify required GitHub variables
        run: |
          required=(GCP_PROJECT_ID GCP_WORKLOAD_IDENTITY_PROVIDER GCP_DEPLOY_SA_EMAIL ARTIFACT_REGISTRY_HOST)
          for var in "${required[@]}"; do
            if [ -z "${!var}" ]; then
              echo "Missing required repository variable: $var" >&2
              exit 1
            fi
          done

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_DEPLOY_SA_EMAIL }}
          token_format: access_token

      - name: Configure Docker authentication
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ARTIFACT_REGISTRY_HOST }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: build
        name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.directory }}
          file: ${{ matrix.directory }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.ARTIFACT_REGISTRY_HOST }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.repository }}/${{ matrix.image }}:${{ github.sha }}
            ${{ env.ARTIFACT_REGISTRY_HOST }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.repository }}/${{ matrix.image }}:latest
          cache-from: type=registry,ref=${{ env.ARTIFACT_REGISTRY_HOST }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.repository }}/${{ matrix.image }}:latest
          cache-to: type=inline

      - name: Publish deployment summary
        run: |
          image="${{ env.ARTIFACT_REGISTRY_HOST }}/${{ env.GCP_PROJECT_ID }}/${{ matrix.repository }}/${{ matrix.image }}"
          {
            echo "### ${{ matrix.service }} image"
            echo
            echo "- Pushed \`${image}:${{ github.sha }}\`"
            echo "- Digest \`${{ steps.build.outputs.digest }}\`"
          } >> "$GITHUB_STEP_SUMMARY"
